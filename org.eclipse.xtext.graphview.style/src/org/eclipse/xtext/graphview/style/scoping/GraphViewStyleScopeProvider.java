/*
 * generated by Xtext
 */
package org.eclipse.xtext.graphview.style.scoping;

import java.util.Collections;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.common.types.JvmParameterizedTypeReference;
import org.eclipse.xtext.graphview.style.graphViewStyle.Style;
import org.eclipse.xtext.resource.EObjectDescription;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.impl.SimpleScope;
import org.eclipse.xtext.xbase.scoping.XbaseScopeProvider;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 */
@SuppressWarnings("restriction")
public class GraphViewStyleScopeProvider extends XbaseScopeProvider {

	@Override
	protected IScope createLocalVarScope(EObject context, EReference reference,
			IScope parentScope, boolean includeCurrentBlock, int idx) {
		if(context instanceof Style) {
			JvmParameterizedTypeReference clazz = ((Style) context).getJavaClass();
			if(clazz != null && clazz.getType() != null) {
				return new SimpleScope(parentScope, Collections.singleton(EObjectDescription.create(XbaseScopeProvider.THIS, clazz.getType())));
			}
		}
		return super.createLocalVarScope(context, reference, parentScope,
				includeCurrentBlock, idx);
	}
}

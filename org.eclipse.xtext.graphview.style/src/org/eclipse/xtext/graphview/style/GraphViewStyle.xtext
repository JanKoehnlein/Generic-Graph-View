grammar org.eclipse.xtext.graphview.style.GraphViewStyle with org.eclipse.xtext.xbase.Xbase

generate graphViewStyle "http://www.xtext.org/graphview/style/GraphViewStyle"
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as jvmTypes
import "platform:/resource/org.eclipse.xtext.graphview.map/src/org/eclipse/xtext/graphview/map/GraphViewMapping.ecore" as gvmapping
import "http://www.eclipse.org/emf/2002/Ecore"

StyleSheet:
	imports+=Import*
	'stylesheet' name=QualifiedName
	styles+=Style*;
	
Import:
	'import' importedNamespace=QualifiedNameWithWildcard;

QualifiedNameWithWildcard:
	QualifiedName ('.' '*')?;
	 
Style:
	'style' mappings+=[gvmapping::AbstractMapping|QualifiedName] (',' mappings+=[gvmapping::AbstractMapping|QualifiedName])* // should become a crossref to a Mapping ID
	('as' javaClass=JvmTypeReference)?
	expression=XBlockExpression?;

XLiteral returns xbase::XExpression:
	XClosure |
	XBooleanLiteral |
	XIntLiteral |
	XNullLiteral |
	XStringLiteral |
	XTypeLiteral |
	XColorLiteral;

XColorLiteral:
	color=Color;

terminal Color:
	'#' ('0'..'9'|'a'..'f'|'A'..'F')
	('0'..'9'|'a'..'f'|'A'..'F')
	('0'..'9'|'a'..'f'|'A'..'F')
	('0'..'9'|'a'..'f'|'A'..'F')
	('0'..'9'|'a'..'f'|'A'..'F')
	('0'..'9'|'a'..'f'|'A'..'F');

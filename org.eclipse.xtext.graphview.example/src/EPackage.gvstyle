import org.eclipse.xtext.graphview.shape.*
import org.eclipse.xtext.graphview.behavior.layout.*  
import org.eclipse.draw2d.*
import org.eclipse.swt.SWT
import EPackageDiagram.*

stylesheet EPackageDiagram for EPackageDiagram

style EPackageDiagram {
	val kieler = new KielerAutoLayout()
	kieler.spacing = 57f
	autoLayoutManager =  kieler
}

style EDataTypeNode as RectangleShape { 
}

style EClassNode.Name {  
	font = font("Helvetica", 13, SWT::BOLD + 
		(if (element.abstract) SWT::ITALIC else SWT::NONE)
	)
}

style EClassNode.Attributes, EClassNode.Operations as RectangleShape {
	outline = false
	backgroundColor = color(#ffffff)
}

style EClassNode.ReferenceEdge as SplineConnectionShape {
	if(element.containment) {
		val	diamond = new PolygonDecoration()
		val points = new geometry.PointList()
		points.addPoint(-2, 0) 
		points.addPoint(-1, -1) 
		points.addPoint(0, 0) 
		points.addPoint(-1, 1) 
		diamond.template = points
		diamond.setScale(6,6)
		targetDecoration = diamond
	} 
}

style EClassNode.ReferenceEdge.EdgeLabel {
	connectionAlignment = ConnectionLocator::TARGET
	opaque = true
}

style EClassNode.SuperclassEdge {
	val arrow = new PolygonDecoration()
	arrow.setScale(10,8)
	arrow.backgroundColor = color(#ffffff)
	arrow.lineWidth = 2
	targetDecoration = arrow 
}

style EClassNode {
	backgroundColor = color(#deedf5)
}

style EClassNode.Attributes.Label, EClassNode.Operations.Label {
	font = font("Helvetica", 11, SWT::NONE)
	border = null
}


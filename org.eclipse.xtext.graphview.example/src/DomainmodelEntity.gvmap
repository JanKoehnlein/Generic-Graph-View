import org.eclipse.emf.ecore.*
import org.eclipse.xtext.example.domainmodel.domainmodel.*
import org.eclipse.xtext.common.types.*
import org.eclipse.xtext.EcoreUtil2

diagram DomainmodelEntityDiagram type Entity {
 	node EntityNode for each jvmElement(typeof(JvmGenericType)) {
		label Name for this
		node Attributes for members.filter(typeof(JvmField)) {
			label Label for each this		
		} 
		node Operations for members.filter(typeof(JvmOperation))
			.filter[declaringType.sourceElement(typeof(Entity)) == null 
				|| sourceElement(typeof(Operation)) != null] {
			label Label for each this
		}
		hidden edge Reference for each members.filter(typeof(JvmField))
			.map[it?.^type.allRawTypes]
			.flatten
			.filter[^type instanceof JvmGenericType 
				&& !isPrimitive(this) && !isIterable(this)
			] {
			=> call EntityNode for ^type
			label ReferenceLabel for EcoreUtil2::getContainerOfType(this, typeof(JvmField))
		}
		hidden edge SuperType for extendedClass {
			=> call EntityNode for ^type
		} unless extendedClass?.^type.sourceElement(typeof(Entity)) == null
	} 
}
